version: "3.8"
services:
  api: # The name of the service
    build:
      dockerfile: Dockerfile
      # Where is the dockerfile located
      context: . 
      # Only will build development stage from our dockerfile
      target: development
    depends_on:
      - postgres
      - redis
      - rabbitmq3
    # environment:
    #   - DATABASE_URL=value
    volumes:
      - .:/usr/src/app
    env_file:
    - .env
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - 3000:3000
    # networks:
    #   - prvNetwork
      
  postgres:
    image: postgres:latest
    ports:
      - 35000:5432
    environment:
      # DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data
    # networks:
    #   - prvNetwork

  redis:
    container_name: redis-cache
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    # networks:
    #   - prvNetwork

  rabbitmq3:
      container_name: "rabbitmq"
      image: rabbitmq:3.8-management-alpine
      environment:
          - RABBITMQ_DEFAULT_USER=user
          - RABBITMQ_DEFAULT_PASS=password
      ports:
          # AMQP protocol port
          - '5672:5672'
          # HTTP management UI
          - '15672:15672'

volumes:
  postgres:

  redis:
    driver: local

networks:
  prvNetwork:
